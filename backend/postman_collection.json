{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
    "name": "Articles API",
    "description": "Collection for Articles API with Authentication, Categories, Tags, and Articles endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3002",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Articles with Comments",
      "item": [
        {
          "name": "Get Article with Comments by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles/id/:id",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "articles",
                "id",
                ":id"
              ],
              "variable": [
                {
                  "key": "id",
                  "value": "article_id_here",
                  "description": "ID of the article"
                }
              ]
            },
            "description": "Get an article by ID with its comments"
          },
          "response": []
        },
        {
          "name": "Get Article with Comments by Slug",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles/slug/:slug",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "articles",
                "slug",
                ":slug"
              ],
              "variable": [
                {
                  "key": "slug",
                  "value": "article-slug-here",
                  "description": "Slug of the article"
                }
              ]
            },
            "description": "Get an article by slug with its comments"
          },
          "response": []
        },
        {
          "name": "Get Articles with Comments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles?page=1&limit=10&published=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "articles"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "published",
                  "value": "true"
                }
              ]
            },
            "description": "Get all articles with their comments"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Comments",
      "item": [
        {
          "name": "Get Comments by Article ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/comments/article/3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "host": ["{{base_url}}"],
              "path": ["api", "comments", "article", "3fa85f64-5717-4562-b3fc-2c963f66afa6"]
            },
            "description": "Get all comments for a specific article"
          },
          "response": []
        },
        {
          "name": "Create Comment (Normal)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is a great article!\",\n  \"articleId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"isAnonymous\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "comments"]
            },
            "description": "Create a new comment with user information"
          },
          "response": []
        },
        {
          "name": "Create Comment (Anonymous)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is an anonymous comment!\",\n  \"articleId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"isAnonymous\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "comments"]
            },
            "description": "Create a new anonymous comment"
          },
          "response": []
        },
        {
          "name": "Delete Comment",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/comments/3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "host": ["{{base_url}}"],
              "path": ["api", "comments", "3fa85f64-5717-4562-b3fc-2c963f66afa6"]
            },
            "description": "Delete a comment (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Comment endpoints for getting, creating, and deleting comments"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();\n",
                  "pm.collectionVariables.set(\"access_token\", jsonData.accessToken);\n",
                  "pm.collectionVariables.set(\"refresh_token\", jsonData.refreshToken);\n"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with user credentials and get access and refresh tokens"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();\n",
                  "pm.collectionVariables.set(\"access_token\", jsonData.accessToken);\n"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/refresh-token",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh-token"]
            },
            "description": "Get a new access token using the refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout and invalidate the refresh token"
          },
          "response": []
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get the profile of the authenticated user"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, token refresh, and logout"
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Get all categories"
          },
          "response": []
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories/1",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "1"]
            },
            "description": "Get a category by its ID"
          },
          "response": []
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Category\",\n  \"description\": \"Description for the new category\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            },
            "description": "Create a new category"
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Category\",\n  \"description\": \"Updated description for the category\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories/1",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "1"]
            },
            "description": "Update a category by its ID"
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/categories/1",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "1"]
            },
            "description": "Delete a category by its ID"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing categories"
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Get All Tags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tags",
              "host": ["{{base_url}}"],
              "path": ["api", "tags"]
            },
            "description": "Get all tags"
          },
          "response": []
        },
        {
          "name": "Get Tag by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tags/1",
              "host": ["{{base_url}}"],
              "path": ["api", "tags", "1"]
            },
            "description": "Get a tag by its ID"
          },
          "response": []
        },
        {
          "name": "Create Tag",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"JavaScript\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tags",
              "host": ["{{base_url}}"],
              "path": ["api", "tags"]
            },
            "description": "Create a new tag"
          },
          "response": []
        },
        {
          "name": "Create Multiple Tags",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tags\": [\"JavaScript\", \"React\", \"Node.js\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tags/batch",
              "host": ["{{base_url}}"],
              "path": ["api", "tags", "batch"]
            },
            "description": "Create multiple tags at once"
          },
          "response": []
        },
        {
          "name": "Delete Tag",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tags/1",
              "host": ["{{base_url}}"],
              "path": ["api", "tags", "1"]
            },
            "description": "Delete a tag by its ID"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing tags"
    },
    {
      "name": "Articles",
      "item": [
        {
          "name": "Get All Articles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles?page=1&limit=10&published=true",
              "host": ["{{base_url}}"],
              "path": ["api", "articles"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "published",
                  "value": "true"
                }
              ]
            },
            "description": "Get all articles with pagination and filters"
          },
          "response": []
        },
        {
          "name": "Get Articles by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles?page=1&limit=10&published=true&categoryId=1",
              "host": ["{{base_url}}"],
              "path": ["api", "articles"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "published",
                  "value": "true"
                },
                {
                  "key": "categoryId",
                  "value": "1"
                }
              ]
            },
            "description": "Get articles filtered by category"
          },
          "response": []
        },
        {
          "name": "Get Articles by Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles?page=1&limit=10&published=true&authorId=1",
              "host": ["{{base_url}}"],
              "path": ["api", "articles"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "published",
                  "value": "true"
                },
                {
                  "key": "authorId",
                  "value": "1"
                }
              ]
            },
            "description": "Get articles filtered by author"
          },
          "response": []
        },
        {
          "name": "Get Article by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles/id/1",
              "host": ["{{base_url}}"],
              "path": ["api", "articles", "id", "1"]
            },
            "description": "Get an article by its ID"
          },
          "response": []
        },
        {
          "name": "Get Article by Slug",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/articles/slug/my-first-article",
              "host": ["{{base_url}}"],
              "path": ["api", "articles", "slug", "my-first-article"]
            },
            "description": "Get an article by its slug"
          },
          "response": []
        },
        {
          "name": "Create Article",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First Article\",\n  \"content\": \"This is the content of my article. It can be a long text with formatting.\",\n  \"excerpt\": \"A short excerpt of the article\",\n  \"categoryId\": 1,\n  \"tags\": [\"JavaScript\", \"React\"],\n  \"published\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/articles",
              "host": ["{{base_url}}"],
              "path": ["api", "articles"]
            },
            "description": "Create a new article"
          },
          "response": []
        },
        {
          "name": "Update Article",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Article Title\",\n  \"content\": \"Updated content of my article.\",\n  \"excerpt\": \"Updated excerpt\",\n  \"categoryId\": 2,\n  \"tags\": [\"JavaScript\", \"Node.js\"],\n  \"published\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/articles/1",
              "host": ["{{base_url}}"],
              "path": ["api", "articles", "1"]
            },
            "description": "Update an article by its ID"
          },
          "response": []
        },
        {
          "name": "Delete Article",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/articles/1",
              "host": ["{{base_url}}"],
              "path": ["api", "articles", "1"]
            },
            "description": "Delete an article by its ID"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing articles"
    }
  ]
}